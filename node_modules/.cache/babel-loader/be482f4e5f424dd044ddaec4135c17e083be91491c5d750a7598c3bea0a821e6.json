{"ast":null,"code":"var _jsxFileName = \"/root/code/JoaoMartinsG/React-Course/first-app/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  const [userTitle, setUserTitle] = useState('');\n  const [userAmount, setUserAmount] = useState('');\n  const [userDate, setUserDate] = useState('');\n\n  // const [userInput, setUserInput] = useState({\n  //   userTitle: '',\n  //   userAmount: '',\n  //   userAmount: '',\n  // })\n\n  //   const titleChangeHandler = (event) => {\n  //     /* setUserInput({\n  //       ...userInput,\n  //       userTitle: event.target.value,\n  //     })\n  //     safer way to update state whenever you depend on previous state since React\n  //     garantees that previous state is the lastest before updating\n  //     setUserInput((prevState) => {\n  //       return { ...prevState, userTitle: event.target.value }\n  //     }) */\n  //     setUserTitle(event.target.value)\n  // }\n\n  /* const amountChangeHandler = (event) => {\n    setUserAmount(event.target.value)\n  } */\n\n  /* const dateChangeHandler = (event) => {\n    setUserDate(event.target.value)\n  } */\n\n  const inputChangeHandler = (identifier, value) => {\n    if (identifier === 'title') {\n      setUserTitle(value);\n    } else if (identifier === 'amount') {\n      setUserAmount(value);\n    } else {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: userTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: userAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: amountChangeHandler,\n          min: \"0.01\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: userDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: dateChangeHandler,\n          min: \"2021-01-01\",\n          max: \"2024-12-31\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"7dnJgWKULRfTQi5Oo2h7Hf6SCww=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","_s","userTitle","setUserTitle","userAmount","setUserAmount","userDate","setUserDate","inputChangeHandler","identifier","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","titleChangeHandler","amountChangeHandler","min","step","dateChangeHandler","max","_c","$RefreshReg$"],"sources":["/root/code/JoaoMartinsG/React-Course/first-app/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from 'react'\n\nimport './ExpenseForm.css'\n\nconst ExpenseForm = () => {\n  const [userTitle, setUserTitle] = useState('')\n  const [userAmount, setUserAmount] = useState('')\n  const [userDate, setUserDate] = useState('')\n\n  // const [userInput, setUserInput] = useState({\n  //   userTitle: '',\n  //   userAmount: '',\n  //   userAmount: '',\n  // })\n\n  //   const titleChangeHandler = (event) => {\n  //     /* setUserInput({\n  //       ...userInput,\n  //       userTitle: event.target.value,\n  //     })\n  //     safer way to update state whenever you depend on previous state since React\n  //     garantees that previous state is the lastest before updating\n  //     setUserInput((prevState) => {\n  //       return { ...prevState, userTitle: event.target.value }\n  //     }) */\n  //     setUserTitle(event.target.value)\n  // }\n\n  /* const amountChangeHandler = (event) => {\n    setUserAmount(event.target.value)\n  } */\n\n  /* const dateChangeHandler = (event) => {\n    setUserDate(event.target.value)\n  } */\n\n  const inputChangeHandler = (identifier, value) => {\n    if (identifier === 'title') {\n      setUserTitle(value);\n    }\n    else if (identifier === 'amount') {\n      setUserAmount(value)\n    }\n    else {\n      \n    }\n  }\n\n  return (\n    <form>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>{userTitle}</label>\n          <input type=\"text\" onChange={titleChangeHandler} />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>{userAmount}</label>\n          <input\n            type=\"number\"\n            onChange={amountChangeHandler}\n            min=\"0.01\"\n            step=\"0.01\"\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>{userDate}</label>\n          <input\n            type=\"date\"\n            onChange={dateChangeHandler}\n            min=\"2021-01-01\"\n            max=\"2024-12-31\"\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  )\n}\n\nexport default ExpenseForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}